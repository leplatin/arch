#!/bin/sh

# This is a wrapper script for lb that allows it to create image previews with
# ueberzug. This works in concert with the lf configuration file and the
# lf-cleaner script.

set -e

cleanup() {
    exec 3>&-
	rm "$FIFO_UEBERZUG"
}

if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
	lf "$@"
else
	[ ! -d "$HOME/.cache/lf" ] && mkdir -p "$HOME/.cache/lf"
	export FIFO_UEBERZUG="$HOME/.cache/lf/ueberzug-$$"
	mkfifo "$FIFO_UEBERZUG"
	ueberzug layer -s <"$FIFO_UEBERZUG" -p json &
	exec 3>"$FIFO_UEBERZUG"
	trap cleanup HUP INT QUIT TERM PWR EXIT
	lf "$@" 3>&-
fi

# set -e
#
# UB_PID=0
# UB_SOCKET=""
#
# cleanup() {
#     exec 3>&-
#     ueberzugpp cmd -s $UB_SOCKET -a exit
# }
#
# if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
# 	lf "$@"
# else
#     [ ! -d "$HOME/.cache/lf" ] && mkdir --parents "$HOME/.cache/lf"
#     UB_PID_FILE="/tmp/.$(uuidgen)"
#     ueberzugpp layer --silent --no-stdin --use-escape-codes --pid-file $UB_PID_FILE
#     UB_PID=$(cat $UB_PID_FILE)
#     rm $UB_PID_FILE
#     UB_SOCKET="/tmp/ueberzugpp-${UB_PID}.socket"
#     export UB_PID UB_SOCKET
#     trap cleanup HUP INT QUIT TERM PWR EXIT
#     lf "$@" 3>&-
# fi


# set -e
#
# if [ -n "$DISPLAY" ]; then
#   export FIFO_UEBERZUG="${TMPDIR:-/tmp}/lf-ueberzug-$$"
#
#   cleanup() {
#     exec 3>&-
#     rm "$FIFO_UEBERZUG"
#   }
#
#   mkfifo "$FIFO_UEBERZUG"
#   ueberzug layer -s <"$FIFO_UEBERZUG" &
#   exec 3>"$FIFO_UEBERZUG"
#   trap cleanup EXIT
#
#   if ! [ -d "$HOME/.cache/lf" ]; then
#     mkdir -p "$HOME/.cache/lf"
#   fi
#
#   lf "$@" 3>&-
# else
#   exec lf "$@"
# fi
