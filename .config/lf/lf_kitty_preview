#!/usr/bin/env bash

file=$1
w=$2
h=$3
x=$4
y=$5

preview() {
	kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$1" </dev/null >/dev/tty
}

batorcat() {
	file="$1"
	shift
	if command -v bat > /dev/null 2>&1
	then
		bat --color=always --style=plain --pager=never "$file" "$@"
	else
		cat "$file"
	fi
}

glowormdcat() {
	file="$1"
	shift
	if command -v glow > /dev/null 2>&1; then
		glow "$file"
	else
		mdcat "$file"
	fi
}

TEMPDIR=/home/mnkey/.cache/lf/

file="$1"
shift
case "$(basename "$file" | tr '[A-Z]' '[a-z]')" in
*.tar*) tar tf "$file" ;;
*.tgz|*.tar.gz) tar tf "$file" ;;
*.tar.bz2|*.tbz2) tar tjf "$file" ;;
*.tar.txz|*.txz) xz --list "$file" ;;
*.zip|*.jar|*.war|*.ear|*.oxt) unzip -l "$file" ;;
*.rar) unrar l "$file" ;;
*.7z) 7z l "$file" ;;
*.md) glowormdcat "$file";;
*.[1-8]) man "$file" | col -b ;;
*.o) nm "$file";;
*.torrent) transmission-show "$file" ;;
*.iso) iso-info --no-header -l "$file" ;;
*.odt|*.ods|*.odp|*.sxw) odt2txt "$file" ;;
*.doc) catdoc "$file" ;;
*.docx) docx2txt "$file" - ;;
*.xml|*.html) w3m -dump "$file";;
*.xls|*.xlsx) ssconvert --export-type=Gnumeric_stf:stf_csv "$file" "fd://1" | batorcat --language=csv ;;
*.wav|*.mp3|*.flac|*.m4a|*.wma|*.ape|*.ac3|*.og[agx]|*.spx|*.opus|*.as[fx]|*.mka) exiftool "$file" ;;
*.avi|*.mp4|*.mkv|*.wmv|*.dat|*.3gp|*.ogv|*.mpg|*.mpeg|*.vob|*.fl[icv]|*.m2v|*.mov|*.webm|*.ts|*.mts|*.m4v|*.r[am]|*.qt|*.divx)
	thumbnail="$TEMPDIR/thumbnail.png"
 	ffmpegthumbnailer -i "$file" -o "$thumbnail" -s 0 -q 5
	preview "$thumbnail"
	;;
*.pdf)
	thumbnail="$TEMPDIR/thumbnail.png"
	gs -o "$thumbnail" -sDEVICE=pngalpha -dLastPage=1 "$file" >/dev/null
	preview "$thumbnail"
	;;
*.epub)
	thumbnail="$TEMPDIR/thumbnail.png"
  epub-thumbnailer "$file" "$thumbnail" 1024
 	preview "$thumbnail"
	;;
*.jpg|*.jpeg|*.png|*.bmp|*.xpm|*.webp|*.gif|*.jfif)
	preview "$file"
	;;
*.ttf|*.otf|*.woff)
	thumbnail="$TEMPDIR/thumbnail.png"
	fontpreview -i "$file" -o "$thumbnail"
	preview "$thumbnail"
	;;
*.svg)
	thumbnail="$TEMPDIR/thumbnail.png"
	convert "$file" "$thumbnail"
	preview "$thumbnail"
	;;
# *) batorcat "$file" ;;
*) file -ibL "$file" | grep -q text && batorcat "$file" || file -Lb "$file" ;;
esac
return 127 # nonzero retcode required for lf previews to reload


# https://github.com/thimc/lfimg
#
# CACHE="$HOME/.cache/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' \
# 	-- "$(readlink -f "$1")" | sha256sum | awk '{print $1}'))"
#
# image() {
# 	if [ -n "$DISPLAY" ] && [ -z "$WAYLAND_DISPLAY" ]; then
# 		printf '{"action": "add", "identifier": "PREVIEW", "x": "%s", "y":"%s", "width": "%s", "height": "%s", "scaler": "contain", "path": "%s"}\n' \
# 			"$4" "$5" "$(($2-1))" "$(($3-1))" "$1" > "$FIFO_UEBERZUG"
# 		exit 1
# 	else
# 		chafa "$1" -s "$4x"
# 	fi
# }
#
# batorcat() {
# 	file="$1"
# 	shift
# 	if command -v bat > /dev/null 2>&1; then
# 		bat --color=always --style=plain --pager=never "$file" "$@"
# 	else
# 		cat "$file"
# 	fi
# }
#
# glowormdcat() {
# 	file="$1"
# 	shift
# 	if command -v glow > /dev/null 2>&1; then
# 		glow "$file"
# 	else
# 		mdcat "$file"
# 	fi
# }
#
# case "$(printf "%s\n" "$(readlink -f "$1")" | awk '{print tolower($0)}')" in
# 	*.tgz|*.tar.gz) tar tzf "$1" ;;
# 	*.tar.bz2|*.tbz2) tar tjf "$1" ;;
# 	*.tar.txz|*.txz) xz --list "$1" ;;
# 	*.tar) tar tf "$1" ;;
# 	*.zip|*.jar|*.war|*.ear|*.oxt) unzip -l "$1" ;;
# 	*.gz) gzip -l "$1" ;;
# 	*.rar) unrar l "$1" ;;
# 	*.md) glowormdcat "$1";;
# 	*.7z) 7z l "$1" ;;
# 	*.[1-8]) man "$1" | col -b ;;
# 	*.o) nm "$1";;
# 	*.torrent) transmission-show "$1" ;;
# 	*.iso) iso-info --no-header -l "$1" ;;
# 	*.odt|*.ods|*.odp|*.sxw) odt2txt "$1" ;;
# 	*.doc) catdoc "$1" ;;
# 	*.docx) docx2txt "$1" ;;
# 	*.xml|*.html) w3m -dump "$1";;
# 	*.xls|*.xlsx)
# 		ssconvert --export-type=Gnumeric_stf:stf_csv "$1" "fd://1" | batorcat --language=csv
# 		;;
# 	*.wav|*.mp3|*.flac|*.m4a|*.wma|*.ape|*.ac3|*.og[agx]|*.spx|*.opus|*.as[fx]|*.mka)
# 		exiftool "$1"
# 		;;
# 	*.pdf)
# 		[ ! -f "${CACHE}.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
# 		image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
# 		;;
# 	*.epub)
# 		[ ! -f "$CACHE" ] && epub-thumbnailer "$1" "$CACHE" 1024
# 		image "$CACHE" "$2" "$3" "$4" "$5"
# 		;;
# 	*.cbz|*.cbr|*.cbt)
# 		[ ! -f "$CACHE" ] && comicthumb "$1" "$CACHE" 1024
# 		image "$CACHE" "$2" "$3" "$4" "$5"
# 		;;
# 	*.avi|*.mp4|*.wmv|*.dat|*.3gp|*.ogv|*.mkv|*.mpg|*.mpeg|*.vob|*.fl[icv]|*.m2v|*.mov|*.webm|*.ts|*.mts|*.m4v|*.r[am]|*.qt|*.divx)
# 		[ ! -f "${CACHE}.jpg" ] && \
# 			ffmpegthumbnailer -i "$1" -o "${CACHE}.jpg" -s 0 -q 5
# 		image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
# 		;;
# 	*.bmp|*.jpg|*.jpeg|*.png|*.xpm|*.webp|*.tiff|*.gif|*.jfif|*.ico)
# 		image "$1" "$2" "$3" "$4" "$5"
# 		;;
# 	*.svg)
# 		[ ! -f "${CACHE}.jpg" ] && convert "$1" "${CACHE}.jpg"
# 		image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
# 		;;
# 	*.ino) batorcat --language=cpp "$1" ;;
# 	*) file -ibL "$1" | grep -q text && batorcat "$1" || file -Lb "$1" ;;
# esac
# exit 0
